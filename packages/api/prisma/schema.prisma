generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/client"
  // binaryTargets = ["native", "linux-musl"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model campaign_items {
  campaign_item_id       String      @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  campaign_id            String      @db.Uuid
  campaign_item_name     String
  campaign_item_quantity Int         @db.SmallInt
  created_at             DateTime    @default(now()) @db.Timestamp(6)
  campaigns              campaigns   @relation(fields: [campaign_id], references: [campaign_id], onDelete: Cascade, onUpdate: NoAction, map: "fk_campaign")
  donations              donations[]
}

model campaigns {
  campaign_id       String           @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  campaign_owner_id String           @db.Uuid
  campaign_title    String
  campaign_desc     String
  campaign_type     String
  delivery_address  String           @default("empty")
  contact_number    String
  end_date          DateTime?        @db.Date
  created_at        DateTime         @default(now()) @db.Timestamp(6)
  users             users            @relation(fields: [campaign_owner_id], references: [user_id], onDelete: Cascade, onUpdate: NoAction, map: "fk_user")
  campaign_items    campaign_items[]
}

model donations {
  donation_id            String         @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  campaign_item_id       String         @db.Uuid
  donations_pledged      Int            @default(0) @db.SmallInt
  donations_received     Int            @default(0) @db.SmallInt
  donator_name           String
  donator_surname        String
  donator_email          String         @db.VarChar(255)
  donator_contact_number String?
  created_at             DateTime       @default(now()) @db.Timestamp(6)
  campaign_items         campaign_items @relation(fields: [campaign_item_id], references: [campaign_item_id], onDelete: Cascade, onUpdate: NoAction, map: "fk_campaign_items")
}

model users {
  user_id    String      @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  username   String      @unique
  password   String
  email      String      @unique @db.VarChar(255)
  created_at DateTime    @default(now()) @db.Timestamp(6)
  campaigns  campaigns[]
}
